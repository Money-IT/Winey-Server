
# 워크플로우의 이름 지정
name: WINEY-DEV-CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ dev ] # dev branch로 push 될 때 실행됩니다.

env:
  S3_BUCKET_NAME: winey-dev

jobs:
  build:
    name: Code deployment

    # 실행 환경
    runs-on: ubuntu-latest

    steps:
    
    # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
    - name: checkout
      uses: actions/checkout@v3
    
    # 2) JDK 11버전 설치, 다른 JDK 버전을 사용하다면 수정
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    # 3) 환경변수 파일 생성
    - name: make application.properties 파일 생성
      run: |
        ## create application.yml
        mkdir -p ./src/main/resources

        # application.yml 파일 생성
        touch ./application.yml

        # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
        echo "${{ secrets.WINEY_DEV_APPLICATION }}" >> ./application.yaml

        # winey-firebase.json 파일 생성
        touch ./winey-firebase.json

        # Firebase secrets 파일 복사
        echo "${{ secrets.WINEY_FIREBASE }}" >> ./winey-firebase.json
        
        # application.yml 파일 확인
        cat ./application.yml
      shell: bash
        
    # 이 워크플로우는 gradle build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle # 실제 application build 테스트 제외
      run: ./gradlew build -x test
      
    # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy
      
    # Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy
    
    # appspec.yml 파일 복사
    - name: Copy appspec.yml
      run: cp appspec.yml ./deploy

    # script files 복사
    - name: Copy script
      run: cp ./scripts/*.sh ./deploy
      
    - name: Make zip file
      run: zip -r ./winey_dev_server.zip ./deploy
      shell: bash
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./winey_dev_server.zip s3://$S3_BUCKET_NAME/
      
    # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET_KEY }}
      run:
        aws deploy create-deployment 
        --application-name winey-dev-codedeploy
        --deployment-group-name winey-dev-codedeploy-group
        --file-exists-behavior OVERWRITE 
        --s3-location bucket=winey-dev,bundleType=zip,key=winey_dev_server.zip
        --region ap-northeast-2
